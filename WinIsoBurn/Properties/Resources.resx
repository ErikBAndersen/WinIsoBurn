<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MediaErase_Description" xml:space="preserve">
    <value>You cannot cancel once after starting to erase. Eraseing media may take much time.</value>
  </data>
  <data name="MediaErase_Erasing" xml:space="preserve">
    <value>Erasing...</value>
  </data>
  <data name="MediaErase_Quick" xml:space="preserve">
    <value>Erase the media quickly</value>
  </data>
  <data name="MediaErase_Start" xml:space="preserve">
    <value>Erase</value>
  </data>
  <data name="MediaErase_Title" xml:space="preserve">
    <value>Rewritable media is selected. Need to erase the disc before writing</value>
  </data>
  <data name="MediaTypeError_InvalidResponseFromDevice" xml:space="preserve">
    <value>Invalid response from device.</value>
  </data>
  <data name="MediaTypeError_NoMediaInserted" xml:space="preserve">
    <value>No media inserted.</value>
  </data>
  <data name="MediaType_BlankBDR" xml:space="preserve">
    <value>Blank BD-R</value>
  </data>
  <data name="MediaType_BlankCDR" xml:space="preserve">
    <value>Blank CD-R</value>
  </data>
  <data name="MediaType_BlankDVDPlusR" xml:space="preserve">
    <value>Blank DVD+R</value>
  </data>
  <data name="MediaType_BlankDVDPlusR_DL" xml:space="preserve">
    <value>Blank DVD+RDL</value>
  </data>
  <data name="MediaType_BlankDVDR" xml:space="preserve">
    <value>Blank DVD-R</value>
  </data>
  <data name="MediaType_BlankDVDR_DL" xml:space="preserve">
    <value>Blank DVD-R DL</value>
  </data>
  <data name="MediaType_DVDPlusRW" xml:space="preserve">
    <value>DVD+RW</value>
  </data>
  <data name="MediaType_DVDRAM" xml:space="preserve">
    <value>DVD-RAM</value>
  </data>
  <data name="MediaType_DVDROM" xml:space="preserve">
    <value>DVD-ROM or recorded DVD</value>
  </data>
  <data name="MediaType_DVDRW" xml:space="preserve">
    <value>DVD-RW</value>
  </data>
  <data name="MediaType_UnknownMedia" xml:space="preserve">
    <value>Unknown media inserted.</value>
  </data>
  <data name="Page1_ButtonFileSelect" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Page1_ButtonISOCheck" xml:space="preserve">
    <value>Confirm image file compatibility</value>
  </data>
  <data name="Page1_ISO_Error_FileSize" xml:space="preserve">
    <value>This image file cannot be used due to too big file size. Select another file and try again.</value>
  </data>
  <data name="Page1_ISO_Error_InvalidISO" xml:space="preserve">
    <value>This image file is invalid. Confirm the file or select another file.</value>
  </data>
  <data name="Page1_ISO_NoProblem" xml:space="preserve">
    <value>This image file has no problem.</value>
  </data>
  <data name="Page1_OpenFileDialogTitle" xml:space="preserve">
    <value>Open the file</value>
  </data>
  <data name="Page1_Title" xml:space="preserve">
    <value>Select an image file to be written</value>
  </data>
  <data name="Page1_WindowTitle" xml:space="preserve">
    <value>Select file to be written</value>
  </data>
  <data name="Page2_MediaInTheDrive" xml:space="preserve">
    <value>Media in the drive:</value>
  </data>
  <data name="Page2_OptionClosing" xml:space="preserve">
    <value>Close the disc after writing</value>
  </data>
  <data name="Page2_OptionVerifying" xml:space="preserve">
    <value>Verify the disc after writing</value>
  </data>
  <data name="Page2_SelectDrive" xml:space="preserve">
    <value>Select a drive:</value>
  </data>
  <data name="Page2_SpeedMax" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="Page2_SpeedSuffix" xml:space="preserve">
    <value>x</value>
  </data>
  <data name="Page2_SpeedUnavailable" xml:space="preserve">
    <value>(Not available)</value>
  </data>
  <data name="Page2_SupportedMedia" xml:space="preserve">
    <value>Supported media:</value>
  </data>
  <data name="Page2_Title" xml:space="preserve">
    <value>Select a drive and set recording media to the drive</value>
  </data>
  <data name="Page2_WindowTitle" xml:space="preserve">
    <value>Preaparation of drive and media</value>
  </data>
  <data name="Page2_WritingSpeed" xml:space="preserve">
    <value>Writing speed:</value>
  </data>
  <data name="Page3_Canceling" xml:space="preserve">
    <value>Canceling...</value>
  </data>
  <data name="Page3_Error_NotEnoughCapacity" xml:space="preserve">
    <value>Enough capacity is not available on this media type. Disc creation has not been completed. Please change the media type and try again.</value>
  </data>
  <data name="Page3_FinalProcessing" xml:space="preserve">
    <value>Final processing...</value>
  </data>
  <data name="Page3_TimeRemainings" xml:space="preserve">
    <value>Time remainings: </value>
  </data>
  <data name="Page3_Title" xml:space="preserve">
    <value>Writing the file onto the disc...</value>
  </data>
  <data name="Page3_Verifying" xml:space="preserve">
    <value>Verifying...</value>
  </data>
  <data name="Page3_WindowTitle" xml:space="preserve">
    <value>Media writing</value>
  </data>
  <data name="Page4_Canceled" xml:space="preserve">
    <value>Disc writing has been canceled</value>
  </data>
  <data name="Page4_Description" xml:space="preserve">
    <value>Remove the disc from the drive and close the windows.</value>
  </data>
  <data name="Page4_Title" xml:space="preserve">
    <value>Disc writing completed</value>
  </data>
  <data name="Page4_WindowTitle" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="Wizard_Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Wizard_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Wizard_Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Wizard_Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Wizard_Next" xml:space="preserve">
    <value>Next</value>
  </data>
</root>